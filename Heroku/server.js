const express = require('express');
const app = express(); 
// Parse incoming request bodies in a middleware before your handlers, available under the req.body property.
// https://www.npmjs.com/package/body-parser
const bodyParser = require('body-parser')
const weatherRequest = require('./requests/weather.request')

app.use(express.static('public'));
// app.use(express.static(__dirname + '/public'));
//console.log('Dirname:', __dirname);
app.set('view engine', 'ejs')
app.use(bodyParser.urlencoded({extended: true}))
// app.set('views', './views'); // It seems like express looking to views dir by default... Right? 

app.get('/', (req, res) => {
    // res.end(`
    //     <h1>Generated by Node Text</h1>
    // `)
    // https://expressjs.com/en/api.html#res.render
    // https://stackoverflow.com/questions/7754799/error-cannot-find-module-ejs
    res.render('index', {weather: null, error: null});
});

app.post('/', async (request, response) => {
    // console.log('Stas');
    // console.log('Request Body', request.body);
    // console.log('Request', request);
    const {city} = request.body; 
    const {weather, error} = await weatherRequest(city)
    response.render('index', {weather, error})
});

app.listen(process.env.PORT || 8080, () => console.log('All is OK'));